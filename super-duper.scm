#!/bin/guile
!#

(define (super-duper source count)
  	
	; try null here and don't return '() in copy


	(if (or (null? source)(not (pair? source)))
		(dup source)	
		(append (copy (super-duper (car source) count) count)  (super-duper (cdr source) count))
		)
)

(define (copy elem count)
	(if (> count 0)
		(cons elem (copy elem (- count 1)))
		'())
)

(define (dup source)
	source
)

(define (copyy elem count)
		(if (> count 0)
		(cons (car (copy elem (- count 1)))
		'()))
)

(define (build a)
	(display (cons a (cons a (cons a a))))
	(display "\n")
)

(define (append s t)
  (if (pair? s)
      (cons (car s) (append (cdr s) t))
      t))

;(build '(x))
;(build '(y))
;(display (cons x (cons x (cons x '(x)))))
;(display "\n")
;(display (cons (cons x (cons x (cons x '(x)))) (cons y (cons y (cons y '(y))))))
;(display (pair? (cons 1))
(display "\n")
;(display (car '(x)))
(display "\n")
;(display (cdr '(x)))
(display "\n")
(display "\n")
;(display (cons 1 (cons 2 '())))
(display "\n")
;(display (dup '(x)))
(display "\n")
(display "\n")
(display "Test (copy 10)")
(display "\n")
(display "Expected Result: (x x x x x x x x x x) ")
(newline)
(display "Actual Result: ")(display (copy '(x) 10))
(display "\n")
(display "\n")
(display "Test (super-duper '(x) 1)")
(display "\n")
(display "Expected Result: (x) ")
(newline)
(display "Actual Result: ")(display (super-duper '(x) 1))
(display "\n")
(display "\n")
(display "Test (super-duper '(x y) 4)")
(display "\n")
(display "Expected Result: (x x x x y y y y) ")
(newline)
(display "Actual Result: ")(display (super-duper '(x y) 4))
(display "\n")
(display "\n")
(display "Test (super-duper 123 1)")
(display "\n")
(display "Expected Result: 123 ")
(newline)
(display "  Actual Result: ")
(display (super-duper 123 1))
(display "\n")
(display "\n")
(display "Test (super-duper '() 1)")
(display "\n")
(display "Expected Result: () ")
(newline)
(display "  Actual Result: ")(display (super-duper '() 1)) 
(display "\n")
(display "\n")
(display "Test (super-duper '((a b) y) 1)")
(display "\n")
(display "Expected Result: ((a a a b b b) (a a a b b b) (a a a b b b) y y y) ")
(newline)
(display "  Actual Result: ")
(display (super-duper '((a b) y) 3))
(display "\n")
(display "\n")
(display "Test (super-duper '(a (b y)) 1)")
(display "\n")
(display "Expected Result: (a a a (b b b y y y) (b b b y y y) (b b b y y y)) ")
(newline)
(display "  Actual Result: ") (display (super-duper '(a (b y)) 3))
(display "\n")
(display "\n")

